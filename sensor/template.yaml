# Template Sensor for extended presence
  - platform: template
    sensors: 
      tommy_status:
        value_template: '{{ states.variable.tommy_status.state }}'
        friendly_name: 'Tommy'


      jessica_status:
        value_template: '{{ states.variable.jessica_status.state }}'
        friendly_name: 'Jessica'

      lexi_status:
        value_template: '{{ states.variable.lexi_status.state }}'
        friendly_name: 'Lexi'

#Template sensor checks eventghost (via MQTT) and Kodi to determine if HTPC is in use
  - platform: template
    sensors:
      glances:
        friendly_name: "HTPC"
        value_template: >-
          {% if is_state('media_player.living_room_tv', 'off') %}
            Off
          {% elif is_state('sensor.htpc_idle', 'Idle') and is_state('media_player.living_room_tv', 'idle') %}
            Idle
          {% else %}
            In Use
          {% endif %}

  - platform: template
    sensors:
      living_room_motion_combo:
        friendly_name: "Living Room Motion"
        value_template: >-
          {% if is_state('sensor.living_room_motion', 'motion detected') %}
            motion detected
          {% elif is_state('sensor.living_room_2_motion', 'motion detected') %}
            motion detected
          {% else %}
            standby
          {% endif %}

  - platform: template
    sensors:
      common_area_motion:
        friendly_name: "Common Area Motion"
        value_template: >-
          {% if is_state('sensor.dining_room_motion', 'motion detected') %}
            Motion Detected
          {% elif is_state('sensor.living_room_motion_combo', 'motion detected') %}
            Motion Detected
          {% elif is_state('sensor.kitchen_motion', 'motion detected') %}
            Motion Detected
          {% else %}
            Standby
          {% endif %}

  - platform: template
    sensors:
      hotend_temp:
        friendly_name: 'Hotend Actual Temp'
        value_template: '{{ ((states.sensor.octoprint_actual_tool0_temp.state | float-32) | float*(5/9)) | round(2) }} 째C'
      bed_temp:
        friendly_name: "Bed Actual Temp"
        value_template: '{{ ((states.sensor.octoprint_actual_bed_temp.state | float-32) | float*(5/9)) | round(2) }} 째C'
      hotend_target:
        friendly_name: 'Hotend Target Temp'
        value_template: '{{ ((states.sensor.octoprint_target_tool0_temp.state | float-32) | float*(5/9)) | round(2) }} 째C'
      bed_target:
        friendly_name: "Bed Target Temp"
        value_template: '{{ ((states.sensor.octoprint_target_bed_temp.state | float-32) | float*(5/9)) | round(2) }} 째C'

  - platform: template
    sensors:
      guestap:
        friendly_name: 'Guest Access AP'
        value_template: "{{ 'Online' if is_state('device_tracker.802aa83e3d97', 'home') else 'Offline' }}"
      radarr:
        friendly_name: 'Radarr'
        value_template: "{{ 'Online' if is_state('device_tracker.couchpotatohome', 'home') else 'Offline' }}"
      freenas:
        friendly_name: 'NAS'
        value_template: "{{ 'Online' if is_state('device_tracker.freenashome', 'home') else 'Offline' }}"
      obitalk:
        friendly_name: 'Phone Service'
        value_template: "{{ 'Online' if is_state('device_tracker.obitalkhome', 'home') else 'Offline' }}"
      ombi:
        friendly_name: 'Ombi'
        value_template: "{{ 'Online' if is_state('device_tracker.ombihome', 'home') else 'Offline' }}"
      owncloud:
        friendly_name: 'Cloud Storage'
        value_template: "{{ 'Online' if is_state('device_tracker.owncloudhome', 'home') else 'Offline' }}"
      pfsense:
        friendly_name: 'Router'
        value_template: "{{ 'Online' if is_state('device_tracker.pfsensehome', 'home') else 'Offline' }}"
      plexserver:
        friendly_name: 'Plex'
        value_template: "{{ 'Online' if is_state('device_tracker.plexhome', 'home') else 'Offline' }}"
      proxmox:
        friendly_name: 'Virtualizarion Server'
        value_template: "{{ 'Online' if is_state('device_tracker.proxmoxhome', 'home') else 'Offline' }}"
      sabnzbd:
        friendly_name: 'SABNZBD'
        value_template: "{{ 'Online' if is_state('device_tracker.sabnzbdhome', 'home') else 'Offline' }}"
      sonarr:
        friendly_name: 'Sonarr'
        value_template: "{{ 'Online' if is_state('device_tracker.sonarrhome', 'home') else 'Offline' }}"
      tvheadend:
        friendly_name: 'TV Head End'
        value_template: "{{ 'Online' if is_state('device_tracker.tvheadendhome', 'home') else 'Offline' }}"
      torrent:
        friendly_name: 'Transmission'
        value_template: "{{ 'Online' if is_state('device_tracker.torrenthome', 'home') else 'Offline' }}"
      unifiap:
        friendly_name: 'Main Unifi AP'
        value_template: "{{ 'Online' if is_state('device_tracker.unifiaphome', 'home') else 'Offline' }}"
      unificontroller:
        friendly_name: 'Unifi Controller'
        value_template: "{{ 'Online' if is_state('device_tracker.unifihome', 'home') else 'Offline' }}"
      xboxone:
        friendly_name: 'Xbox One'
        value_template: "{{ 'Online' if is_state('device_tracker.xboxonehome', 'home' ) else 'Offline' }}"
      xbox360:
        friendly_name: 'Xbox 360'
        value_template: "{{ 'Online' if is_state('device_tracker.7ced8d8a9fbe', 'home' ) else 'Offline' }}"
      switch:
        friendly_name: 'Nintendo Switch'
        value_template: "{{ 'Online' if is_state('device_tracker.0403d6daf0ae', 'home' ) else 'Offline' }}"
      ps3:
        friendly_name: 'Playstation 3'
        value_template: "{{ 'Online' if is_state('device_tracker.280dfcf53162', 'home' ) else 'Offline' }}"
      lexixboxone:
        friendly_name: 'Lexi Xbox One'
        value_template: "{{ 'Online' if is_state('device_tracker.xboxone', 'home' ) else 'Offline' }}"
      garage_door_template:
        value_template: >-
          {% if is_state('sensor.garage_door', 'open') %}
            Open
          {% else %}
            Closed
          {% endif %}
        icon_template: >-
          {% if is_state('sensor.garage_door', 'open') %}
            mdi:garage-open
          {% else %}
            mdi:garage
          {% endif %}


