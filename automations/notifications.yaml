# This (trigger) has to happen, while condition(s) are true, to do stuff (action)

# Check if Lexi is On XBox
  - id: "123456123456789"
    alias: Is Lexi on Xbox
    trigger:
      - platform: state
        entity_id: sensor.lexixboxone
        from: 'Offline'
        to: 'Online'
    action:
      - service: notify.telegram
        data_template:
          message: "Lexi has signed on to XBox"
          target: 
            - 816032519 #Tommy
            - 846016601 #Jessica

# Check if Lexi Signed Off XBox
  - id: "123456789456123"
    alias: Is Lexi off Xbox
    trigger:
      - platform: state
        entity_id: sensor.lexixboxone
        from: 'Online'
        to: 'Offline'
    action:
      - service: notify.telegram
        data_template:
          message: "Lexi has signed off of XBox"
          target: 
            - 816032519 #Tommy
            - 846016601 #Jessica

# Take Out Trash
  - id: "123456654984"
    alias: 'Trash Day'
    trigger:
      - platform: time
        at: '00:30:00'
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{states.calendar.main.attributes.message == 'Trash Day'}}"
        - condition: state
          entity_id: calendar.main
          state: 'on'
    action:
     - service: notify.telegram
       data_template:
         message: "Take out the Trash"
         target: 
           - 816032519 #Tommy

# Take Out Recycling
  - id: "1234569874651689"
    alias: 'Recycling Day'
    trigger:
      - platform: time
        at: '00:30:00'
    condition:
      condition: and
      conditions:
        - condition: template
          value_template: "{{states.calendar.main.attributes.message == 'Recycling Day'}}"
        - condition: state
          entity_id: calendar.main
          state: 'on'
    action:
     - service: notify.telegram
       data_template:
         message: "Take out the Recycling"
         target: 
           - 816032519 #Tommy
         
  - alias: 'Shopping List'
    trigger:
      - platform: state
        entity_id: device_tracker.google_maps_104723974144441113874
        to: 'Win-Dixie'
      - platform: state
        entity_id: device_tracker.google_maps_105472855536836656633
        to: 'Win-Dixie'
    action:
      - service: notify.telegram
        data_template:
          message: "Would you like to view the shopping list?"
          target: >-
            {% if states.device_tracker.google_maps_104723974144441113874.state == 'Win-Dixie' %}
              846016601
            {% else %}
              816032519
            {% endif %}
          data:
            inline_keyboard:
              - 'Yes:/yes_shopping, No:/no_shopping'

  - alias: 'View Shopping List'
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/yes_shopping"
    action:
      - service: notify.telegram
        data_template:
          message: !secret hass_url
          target: >-
            {% if states.device_tracker.google_maps_104723974144441113874.state == 'Win-Dixie' %}
              846016601
            {% else %}
              816032519
            {% endif %}
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []   

  - alias: 'No View Shopping List'
    trigger:
      - platform: event
        event_type: telegram_callback
        event_data:
          data: "/no_shopping"
    action:
      - service: notify.telegram
        data_template:
          message: "Ok"
          target: >-
            {% if states.device_tracker.google_maps_104723974144441113874.state == 'Win-Dixie' %}
              846016601
            {% else %}
              816032519
            {% endif %}
      - service: telegram_bot.edit_replymarkup
        data_template:
          message_id: '{{ trigger.event.data.message.message_id }}'
          chat_id: '{{ trigger.event.data.user_id }}'
          inline_keyboard: []   